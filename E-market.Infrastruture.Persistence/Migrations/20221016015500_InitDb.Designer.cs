// <auto-generated />
using System;
using E_market.Infrastruture.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace E_market.Infrastruture.Persistence.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20221016015500_InitDb")]
    partial class InitDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("E_Market.Core.Domain.Entities.Categories", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("categoriesDescrition")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("categoriesName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.ToTable("Categories", (string)null);
                });

            modelBuilder.Entity("E_Market.Core.Domain.Entities.Comercial", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("comercialCategoriesID")
                        .HasColumnType("int");

                    b.Property<DateTime>("comercialDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("comercialDesciption")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("comercialImage1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("comercialImage2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("comercialImage3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("comercialImage4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("comercialName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("comercialUsersID")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("comercialCategoriesID");

                    b.HasIndex("comercialUsersID");

                    b.ToTable("Comercial", (string)null);
                });

            modelBuilder.Entity("E_Market.Core.Domain.Entities.Users", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserLastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsersPasswork")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsersPhone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("E_Market.Core.Domain.Entities.Comercial", b =>
                {
                    b.HasOne("E_Market.Core.Domain.Entities.Categories", "comercialCategories")
                        .WithMany("comercials")
                        .HasForeignKey("comercialCategoriesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Market.Core.Domain.Entities.Users", "comercialUsers")
                        .WithMany("comercials")
                        .HasForeignKey("comercialUsersID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("comercialCategories");

                    b.Navigation("comercialUsers");
                });

            modelBuilder.Entity("E_Market.Core.Domain.Entities.Categories", b =>
                {
                    b.Navigation("comercials");
                });

            modelBuilder.Entity("E_Market.Core.Domain.Entities.Users", b =>
                {
                    b.Navigation("comercials");
                });
#pragma warning restore 612, 618
        }
    }
}
